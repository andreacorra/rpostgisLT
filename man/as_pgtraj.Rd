% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_pgtraj.R
\name{as_pgtraj}
\alias{as_pgtraj}
\title{Converts relocation data into the pgtraj data model.}
\usage{
as_pgtraj(conn, schema = "traj", relocations_table = NULL,
  pgtrajs = "pgtraj", animals = "animal", bursts = NULL,
  relocations = NULL, timestamps = NULL, rids = "rid", srid = NULL,
  db = TRUE)
}
\arguments{
\item{conn}{Connection object created with RPostgreSQL}

\item{schema}{String. Name of the schema that stores or will store the pgtraj data model.}

\item{relocations_table}{String. Name of the table that stores the relocations, e.g. "public.relocations"}

\item{pgtrajs}{String. Name of the pgtraj or name of the field that stores the pgtraj names.}

\item{animals}{String. Name of the animal or name of the field that stores the animal names.}

\item{bursts}{String. Name of the burst or name of the field that stores the burst names.}

\item{relocations}{String. Name of the field that contains the relocations in relocations_table.}

\item{timestamps}{String. Name of the field in relocations_table that contains the timestamps.
If NULL, Type I trajectory is assumed.}

\item{rids}{String. Name of the field in relocations_table that contains the numeric IDs of relocations.}

\item{db}{Boolean. If TRUE, the relocations are stored in a database table, 
if FALSE relocations are stored in an R object. It is meant to be used by other functions internally. 
If you want to import an ltraj from R, use ltraj2pgtraj().}
}
\value{
TRUE on success
}
\description{
This is the core function of the \code{rpostgisLT} package and it is also 
used by \code{\link{ltraj2pgtraj}} to import trajectory data into a pgtraj 
data model. \code{as_pgtraj} copies the trajectory data which is stored in 
a database to a traj schema. If the provided schema doesn't exist, it is 
created on demand. On successful data input, \code{as_pgtraj} creates a view for
each pgtraj, with the views named as <pgtraj_name>_parameters. The view contains the same step parameters 
as an ltraj object (e.g. R2n, rel.angle, dt...). If the input geometries
are projected, their projection is used to create the steps in the schema, 
otherwise either no projection is used or the fuction exits.
}
\details{
Opening and closing connections have to be done manually by the user. 
However, the function checks if the provided connection is still valid. 
Not tested with capital letters for PostgreSQL field names, but it probably won't 
work. Its a bad practice anyway to force uppercase in PostgreSQL so use lowercase.
}
\examples{
\dontrun{
as_pgtraj(conn, 
        schema = "traj_t4",
        relocations_table = "example_data.relocations_plus",
        pgtrajs = "id",
        animals = "animal",
        bursts = "burst",
        relocations = "geom",
        timestamp = "time",
        rid = "gid")
}

}
\author{
Bal<U+FFFD><U+FFFD>zs Dukai \email{balazs.dukai@gmail.com}
}
\references{
\url{https://cran.r-project.org/web/packages/adehabitatLT/vignettes/adehabitatLT.pdf}
}
\seealso{
Section on pgtraj data model in the package vignette.
}

